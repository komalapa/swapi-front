{"version":3,"sources":["swapiModule/swapiModule.js","imgs/death_star.svg","components/loading/loading.jsx","components/infoModal/infoModal.jsx","components/infoTableRow/infoTableRow.jsx","components/pagination/pagination.jsx","components/infoTable/infoTable.jsx","components/navTable/navTable.jsx","imgs/r2d2.svg","components/notFound/notFound.jsx","components/footer/footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["SWAPI_LINK","getListByLink","link","Promise","resolve","reject","fetch","then","response","ok","json","data","Loading","src","deathstar","alt","className","React","Component","InfoModal","props","state","mainRequest","promisesArray","fields","results","i","key","test","console","log","digPromise","resp","name","title","push","Array","isArray","j","length","moment","format","allSettled","res","digListByLink2","this","setState","prevstate","catch","prettyData","join","Object","keys","map","index","onClick","handleShowMore","InfoTableRow","showModal","bind","item","gender","url","Pagination","handleLoadPage","curPage","loadAnyPage","curPageInd","prevPage","split","includes","links","numberOfItems","Math","floor","disabled","nextPage","InfoTable","path","location","pathname","loadedData","count","handleNextPage","handlePrevPage","handleAnyPage","next","previous","to","NavTable","columns","dataIndex","render","number","action","dataSource","pagination","NotFound","r2d2","Footer","target","rel","href","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4cb434e.chunk.js","sourcesContent":["import moment from 'moment';\n\n\nexport const SWAPI_LINK = 'https://swapi.dev/api/'\n\n//Получает список по указанной ссылке. Если ссылка не указана получает главный список\nexport function getListByLink(link){\n    if (!link) link = SWAPI_LINK;\n    return new Promise (function(resolve, reject){\n        \n        fetch(link)\n        .then((response) => {\n            //console.log(response)\n            if (!response.ok){reject(response)}\n            else return response.json();\n        })\n        .then((data) => {\n            resolve(data)\n        })\n    })  \n}\n//Получает список по ссылке и разворачивает названия.\nexport function digListByLink(link){\n    let promisesArray = [];\n    let mainRequest = getListByLink(link)\n    promisesArray.push(mainRequest)\n    mainRequest.then(data =>{\n        let fields = data.results ? data.results:[data]\n        let promisesArray = [];\n        for (let i=0; i< fields.length; i++){\n            for (let key in fields[i]){\n                console.log(key, promisesArray)\n                if (key !== 'url' && typeof fields[i][key] === 'string' && /^http*/.test(fields[i][key]))  {\n                    promisesArray.push(getListByLink(fields[i][key])\n                    .then((resp) => {\n                        fields[i][key] = resp.name? resp.name : resp.title? resp.title: fields[i][key]}))\n                } else if (Array.isArray(fields[i][key]))  {\n                    for (let j = 0; j < fields[i][key].length; j++){\n                        if (typeof fields[i][key][j] === 'string' && /^http*/.test(fields[i][key][j]))  {\n                            promisesArray.push(getListByLink(fields[i][key][j])\n                            .then((resp) => {\n                                fields[i][key][j] = resp.name? resp.name : resp.title? resp.title: fields[i][key][j]}))\n                            }\n                    }\n                }\n                if (key === \"created\" || key === \"edited\"){\n                    fields[i][key] = moment(fields[i][key]).format('ddd-DD/MM/YYYY')\n                }\n            }\n        }          \n    })  \n    console.log (promisesArray)\n    return Promise.allSettled(promisesArray).then((data)=>{console.log(data[0].value);return data[0].value})   \n} \n\nexport function digListByLink2(link){\n    let mainRequest = getListByLink(link)\n    var promisesArray = [];\n   return mainRequest\n    .then(data =>{\n        \n        let fields = data.results ? data.results:[data]\n        for (let i=0; i< fields.length; i++){\n            for (let key in fields[i]){\n                if (key !== 'url' && typeof fields[i][key] === 'string' && /^http*/.test(fields[i][key]))  {\n                    console.log(\"dig url\", fields[i][key])\n                    let digPromise = (getListByLink(fields[i][key])\n                    .then((resp) => {\n                        fields[i][key] = resp.name? resp.name : resp.title? resp.title: fields[i][key]; return fields}))\n                    promisesArray.push(digPromise)\n                } else if (Array.isArray(fields[i][key]))  {\n                    for (let j = 0; j < fields[i][key].length; j++){\n                        if (typeof fields[i][key][j] === 'string' && /^http*/.test(fields[i][key][j]))  {\n                            let digPromise = (getListByLink(fields[i][key][j])\n                            .then((resp) => {\n                                fields[i][key][j] = resp.name? resp.name : resp.title? resp.title: fields[i][key][j]; return fields}))\n                            promisesArray.push(digPromise)\n                        }\n                    }\n                }\n                if (key === \"created\" || key === \"edited\"){\n                    fields[i][key] = moment(fields[i][key]).format('ddd-DD/MM/YYYY')\n                }\n            }\n        }\n        return Promise.allSettled(promisesArray).then((res)=>{return data});\n    })\n    \n    \n}\n\n// function getFullList(link, data){\n//     if (!data) data=[];\n//     getListByLink(link)\n//     .then(pageData =>{\n//         //console.log(data)\n//         data = [...data, ...pageData.results]\n\n//         if (pageData.next) {data = getFullList(pageData.next, data)\n//         } else {\n//             console.log(data)\n//             return [...data]\n//         }\n//     })\n// }\n\n// export function filterByFilms(link){\n//     if (!link) link = SWAPI_LINK;\n//     let films = [\"none\"] \n//     getListByLink(SWAPI_LINK+'films/').then((filmsData)=>{\n//         films = filmsData.results.map(item => item.title)\n//         //console.log(\"films\",films)\n//     })\n//     //console.log()\n//     console.log(getFullList(link+'people'))\n// }","export default __webpack_public_path__ + \"static/media/death_star.1ac1a142.svg\";","import React from 'react';\nimport './loading.css'\nimport deathstar from '../../imgs/death_star.svg'\n\nexport class Loading extends React.Component{\n\n    render()\n    {\n        return <img src={deathstar} alt=\"\" className=\"loading\"/>\n    }\n}\n    \n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card} from 'antd';\nimport {digListByLink2} from '../../swapiModule/swapiModule.js'\n\nimport {Loading} from \"../loading/loading\"\nimport './infoModal.css'\n\n\nexport class InfoModal extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {data:null}\n    }\n\n    componentDidMount() {\n        digListByLink2(this.props.link)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                data:{...data},\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n        \n    render(){\n        console.log(\"state\",this.state.data )\n        let prettyData ={}\n        if (this.state.data){\n            \n            for (let key in this.state.data){\n                console.log(typeof this.state.data[key])\n                if (Array.isArray(this.state.data[key])){\n                    console.log('array')\n                    prettyData[key] = this.state.data[key].join(', ')\n                }else{\n                    prettyData[key] = this.state.data[key]\n                }\n            }\n        }\n        return(\n            <>\n                {!this.state.data && <Loading/>}\n                {this.state.data &&\n                    <Card title={this.state.data.name || this.props.state.title } >\n                        <ul className=\"info-modal-ul\" >\n                            {Object.keys(prettyData).map((title,index) => {return <li key = {index}> <b>{title}</b>: {prettyData[title]}</li>})}\n                        </ul>\n                        <button className=\"info-modal-close\" onClick={this.props.handleShowMore}>&#10007;close</button>\n                    </Card>\n                }\n            </>\n        )\n    }\n}\n    \n\nInfoModal.propTypes ={\n    data : PropTypes.object.isRequired,\n    handleShowMore : PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {InfoModal} from '../infoModal/infoModal'\nimport { Button } from 'antd';\n\nexport class InfoTableRow extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {showModal: false}\n        this.handleShowMore = this.handleShowMore.bind(this)\n    }\n    handleShowMore(){\n        this.setState(prevstate => ({showModal:!prevstate.showModal}))\n    }\n    render()\n    {\n        return(\n            <tr>  \n                \n                <td>{this.props.item.name || this.props.item.title}</td>\n                {this.props.item.gender && this.props.item.gender === \"male\" ? <td className=\"gender-icon\">&#9794;</td> : this.props.item.gender === \"female\" ? <td className=\"gender-icon\">&#9792;</td> : <td></td>}\n                <td>\n                    {this.state.showModal && <InfoModal handleShowMore={this.handleShowMore} data = {this.props.item} link = {this.props.item.url}/>}\n                    <Button onClick = {this.handleShowMore}>Show  {this.state.showModal? 'less...':'more...' }</Button>\n                </td>\n            </tr>)\n    }\n}\n    \n\nInfoTableRow.propTypes ={\n    item : PropTypes.object.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport './pagination.css'\n\nconst PAGE_SIZE = 10 //fixed by swapi\n\nexport class Pagination extends React.Component{\n    handleLoadPage = (link, index)=>() => {\n        this.setState(prevstate => ({...prevstate, curPage: index+1}))\n        this.props.loadAnyPage(link)\n    }\n\n    render()\n    {\n        let curPageInd = 0;\n        if (this.props.prevPage){\n            curPageInd = +this.props.prevPage.split('?page=')[1]\n        }\n        \n        if (this.props.link.includes('?page')){console.log(\"PROBLEM\")}\n        let links = [this.props.link];\n        for (let i = 11; i < this.props.numberOfItems ; i+=PAGE_SIZE){\n            links.push(this.props.link+'?page='+(Math.floor(i/PAGE_SIZE)+1))\n        }\n        return(\n            <div className=\"table-pagination\">\n                <Button className=\"table-pagination-button\" onClick={this.handleLoadPage(this.props.prevPage)} disabled = {!this.props.prevPage}>prev</Button>\n                {links.map((link, index)=><Button className=\"table-pagination-button\" key = {index} onClick = {this.handleLoadPage(link, index)} disabled = {index===curPageInd}>{index+1}</Button> )}\n                <Button className=\"table-pagination-button\" onClick={this.handleLoadPage(this.props.nextPage)} disabled = {!this.props.nextPage}>next</Button>\n            </div>\n        )\n    }\n}\n    \n\nPagination.propTypes ={\n    link : PropTypes.string.isRequired,\n    numberOfItems: PropTypes.number.isRequired,\n    loadAnyPage:PropTypes.func.isRequired,\n    prevPage: PropTypes.string,\n    nextPage: PropTypes.string,\n    \n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {InfoTableRow} from \"../infoTableRow/infoTableRow\"\nimport {Loading} from \"../loading/loading\"\nimport {Pagination} from \"../pagination/pagination\"\nimport {getListByLink, SWAPI_LINK} from '../../swapiModule/swapiModule.js'\n\nimport './infoTable.css'\n\nexport class InfoTable extends React.Component{\n    \n    constructor(props) {\n        super(props);\n        const path = props.location.pathname.split('/')\n        let link =  SWAPI_LINK + path[path.length -1]\n        this.state = {loadedData: null, nextPage:null, prevPage:null, count: 0, title:path[path.length -1], link: link};\n        this.handleNextPage = this.handleNextPage.bind(this)\n        this.handlePrevPage = this.handlePrevPage.bind(this)\n        this.handleAnyPage = this.handleAnyPage.bind(this)\n    }\n    \n    componentDidMount() {\n        getListByLink(this.state.link)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n                count: data.count\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n    handleAnyPage(link){\n        this.setState(prevstate => ({\n            ...prevstate,\n            loadedData: null,\n        }))\n        getListByLink(link)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\")); \n    }\n    handleNextPage(){\n        this.setState(prevstate => ({\n            ...prevstate,\n            loadedData: null,\n        }))\n        getListByLink(this.state.nextPage)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n    handlePrevPage(){\n        this.setState(prevstate => ({\n            ...prevstate,\n            loadedData: null,\n        }))\n        getListByLink(this.state.prevPage)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n    // handletest(){\n    //     filterByFilms()\n    // }\n    render()\n    {\n        return(\n            <> \n            {!this.state.loadedData && <Loading/>} \n            {/* <button onClick={this.handletest}>test</button> */}\n                <h1>{this.state.title}</h1>\n                <Link to=\"/main\" className=\"back-to-main starwars-font\">Back to the main list</Link>\n\n                <table className=\"info-table\">\n                    <tbody>\n                        {this.state.loadedData && this.state.loadedData.map((item, index) => <InfoTableRow key = {index} item = {item}/>)}     \n                    </tbody>\n                    \n                </table>\n                {this.state.loadedData && \n                    <div className=\"page-controls\">\n                        {this.state.count>10 && <Pagination  link = {this.state.link} numberOfItems = {this.state.count} loadAnyPage={this.handleAnyPage} nextPage={this.state.nextPage} prevPage={this.state.prevPage}/>}\n                    </div>\n                } \n   \n            </>)\n    }\n}\n    \n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {Loading} from \"../loading/loading\"\nimport {getListByLink} from '../../swapiModule/swapiModule.js'\nimport { Table} from 'antd';\n\nexport class NavTable extends React.Component{\n    \n    constructor(props) {\n        super(props);\n        this.state = {loadedData: null};\n    }\n    \n    componentDidMount() {\n        \n        getListByLink()\n        .then((data) => {\n            this.setState({\n                loadedData: data\n            })\n        });\n    }\n      \n\n    render()\n    {\n        const columns = [\n            {\n              title: '№',\n              dataIndex: 'number',\n              key: 'number',\n            },\n            {\n              title: 'Title',\n              dataIndex: 'title',\n              key: 'title',\n            },\n            {\n              title: 'Link',\n              dataIndex: 'link',\n              key: 'link',\n            },\n            {\n              title: 'Action',\n              key: 'action',\n              dataIndex: 'action',\n              render: key => (<Link to = {'/infotables/'+key}>Open page</Link>)\n            },\n          ];\n          const data = []\n          for (let key in this.state.loadedData){\n              data.push({\n                key: data.length,\n                number: data.length+1,\n                title: key,\n                link: this.state.loadedData[key],\n                action: key,\n              })\n          }  \n          \n        return(\n            <>  \n                {!this.state.loadedData && <Loading/>} \n                <h1>{this.props.title}</h1>\n                <Table columns={columns} dataSource={data} pagination={false}/>\n            </>)\n    }\n}\n    \n\nNavTable.propTypes ={\n    title : PropTypes.string.isRequired,\n}\n","export default __webpack_public_path__ + \"static/media/r2d2.4002b4bf.svg\";","import React from 'react';\nimport './notFound.css'\nimport r2d2 from '../../imgs/r2d2.svg'\n\nexport class NotFound extends React.Component{\n\n    render()\n    {\n        return(\n            <>  \n                <div className=\"not-found\">\n                    <h1 className=\"not-found-header\">This is not the page you're looking for</h1>\n                    <img src={r2d2} alt=\"\" className=\"r2d2\"/>\n                </div>\n                \n            </>)\n    }\n}\n    \n\n\n","import React from 'react';\nimport './footer.css'\n\nexport class Footer extends React.Component{\n\n    render()\n    {\n        return(\n            <>  \n                <footer className=\"footer\">\n                    <p>One more interface for <a target=\"_blank\" rel=\"noreferrer\" href=\"https://swapi.dev/\">SWAPI</a></p>\n                </footer>\n                \n            </>)\n    }\n}\n   ","import './App.css';\nimport React from 'react';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\n\nimport { InfoTable } from './components/infoTable/infoTable';\nimport {NavTable} from './components/navTable/navTable'\nimport {NotFound} from './components/notFound/notFound'\nimport {Footer} from './components/footer/footer'\n\nfunction App() {\n  return(\n    <div className=\"main-wrp\">\n    <main className=\"main\">\n      <BrowserRouter>\n        <Switch>\n          <Route path = '/' exact><Redirect to=\"/main\" /></Route>\n          <Route path = '/main' >\n            <NavTable title = \"Main List\"/>\n          </Route>\n          <Route path = '/infotables/:theme' exact component={InfoTable}></Route>\n          <Route path = '/' component={NotFound}/> \n        </Switch>\n      </BrowserRouter>\n    </main>\n    <Footer/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n//import {getListByLink, digListByLink} from './swapiModule/swapiModule.js'\n\n\n// getListByLink()//'https://swapi.dev/api/films')\n// .then(data => {console.log(\"then \", data)})\n// .catch(error => {console.log(\"catch \", error)});\n\n// digListByLink('https://swapi.dev/api/people')\n// .then(data => {console.log(\"then \", data)})\n// .catch(error => {console.log(\"catch \", error)});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}