{"version":3,"sources":["swapiModule/swapiModule.js","imgs/death_star.svg","components/loading/loading.jsx","components/infoModal/infoModal.jsx","components/infoTableRow/infoTableRow.jsx","components/pagination/pagination.jsx","components/filter/filter.jsx","components/infoTable/infoTable.jsx","components/navTable/navTable.jsx","imgs/r2d2.svg","components/notFound/notFound.jsx","components/footer/footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["SWAPI_LINK","getListByLink","link","replace","console","log","Promise","resolve","reject","fetch","cache","then","response","ok","json","Error","statusText","data","catch","err","getAllItemsByLink","addPage","list","next","results","addNextPage","split","condition","action","whilePr","Loading","src","deathstar","alt","className","React","Component","InfoModal","props","state","isModalVisible","handleIsShowModal","bind","mainRequest","promisesArray","fields","i","key","test","digPromise","resp","name","title","push","Array","isArray","j","length","moment","format","allSettled","res","digListByLink","this","setState","prevstate","callback","prettyData","join","onClick","visible","onCancel","footer","Object","keys","map","index","InfoTableRow","item","gender","url","Pagination","handleLoadPage","curPage","loadAnyPage","curPageInd","prevPage","includes","links","numberOfItems","Math","floor","disabled","nextPage","Option","Select","Filter","filterData","filtredList","showModal","filterValue","handleChange","handleShowMore","handleHideTable","filterLink","value","filter","films","indexOf","columns","dataIndex","render","number","id","defaultValue","onChange","find","dataSource","showHeader","InfoTable","path","location","pathname","loadedData","count","handleNextPage","handlePrevPage","handleAnyPage","previous","to","NavTable","pagination","NotFound","r2d2","Footer","target","rel","href","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c35c95b4.chunk.js","sourcesContent":["import moment from 'moment';\n\n\nexport const SWAPI_LINK = 'https://swapi.dev/api/'\n\n\n//Получает список по указанной ссылке. Если ссылка не указана получает главный список\nexport function getListByLink(link){\n    if (!link) link = SWAPI_LINK;\n    link = link.replace(\"http://\",\"https://\")\n    console.log(\"after\",link)\n    return new Promise (function(resolve, reject){\n        fetch(link, {cache: \"force-cache\"})\n        .then((response) => {\n            //console.log(response)\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            else return response.json();\n        })\n        .then((data) => {\n            resolve(data)\n        })\n        .catch((err)=>reject(err))\n    })  \n}\n//Получает список по ссылке и разворачивает названия.\nexport function digListByLink(link){\n    let mainRequest = getListByLink(link)\n    var promisesArray = [];\n   return mainRequest\n    .then(data =>{\n        \n        let fields = data.results ? data.results:[data]\n        for (let i=0; i< fields.length; i++){\n            for (let key in fields[i]){\n                if (key !== 'url' && typeof fields[i][key] === 'string' && /^http*/.test(fields[i][key]))  {\n                    const foundLink = fields[i][key].replace(\"http://\",\"https://\")\n                    let digPromise = (getListByLink(foundLink)\n                    .then((resp) => {\n                        fields[i][key] = resp.name? resp.name : resp.title? resp.title: fields[i][key]; return fields}))\n                    promisesArray.push(digPromise)\n                } else if (Array.isArray(fields[i][key]))  {\n                    for (let j = 0; j < fields[i][key].length; j++){\n                        if (typeof fields[i][key][j] === 'string' && /^http*/.test(fields[i][key][j]))  {\n                            const foundLink = fields[i][key][j].replace(\"http://\",\"https://\")\n                            let digPromise = (getListByLink(foundLink)\n                            .then((resp) => {\n                                fields[i][key][j] = resp.name? resp.name : resp.title? resp.title: fields[i][key][j]; return fields}))\n                            promisesArray.push(digPromise)\n                        }\n                    }\n                }\n                if (key === \"created\" || key === \"edited\"){\n                    fields[i][key] = moment(fields[i][key]).format('ddd-DD/MM/YYYY')\n                }\n            }\n        }\n        return Promise.allSettled(promisesArray).then((res)=>{return data});\n    })\n    \n    \n}\n\nfunction promiseWhile(data, condition, action) {\n    let whilePr = (data) => {\n        //console.log(\"while\")\n        //console.log(\"condition\",condition(data))\n        //console.log('data', data)\n      return condition(data) ?\n        action(condition(data)).then(whilePr) :\n        Promise.resolve(data);\n    }\n    return whilePr(data);\n  };\n\nfunction addNextPage() {\n    let list = {next:'', data:[]};\n    return function(link) {\n        //console.log('get', list)\n        return getListByLink(link).then(data => {\n            //console.log(data)\n            //console.log(\"list before\",list.data);\n            list.data = [...list.data , ...data.results]; \n            //console.log(\"list after\",list.data); \n            list.next = data.next; \n            return list})\n    };\n  }\n\n\nexport function getAllItemsByLink(link){\n    let addPage = addNextPage()\n    if (!link) link = SWAPI_LINK+'people';\n    link = link.split('?')[0];\n    let list = {next: link, data:[]}\n    let nextPage=(data)=>data.next\n    return promiseWhile(list, nextPage, addPage)\n}","export default __webpack_public_path__ + \"static/media/death_star.1ac1a142.svg\";","import React from 'react';\nimport './loading.css'\nimport deathstar from '../../imgs/death_star.svg'\n\nexport class Loading extends React.Component{\n\n    render()\n    {\n        return <img src={deathstar} alt=\"\" className=\"loading\"/>\n    }\n}\n    \n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Modal,Button} from 'antd';\nimport {digListByLink} from '../../swapiModule/swapiModule.js'\n\nimport {Loading} from \"../loading/loading\"\nimport './infoModal.css'\n\n\nexport class InfoModal extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {data:null, isModalVisible: false}\n        this.handleIsShowModal = this.handleIsShowModal.bind(this)\n    }\n\n    componentDidMount() {\n        digListByLink(this.props.link)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                data:{...data},\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n    componentWillUnmount(){\n        this.setState = (state,callback)=>{\n            return;\n        }\n    }\n    handleIsShowModal(){\n        this.setState(prevstate => ({isModalVisible:!prevstate.isModalVisible}))\n    } \n    render(){\n        let prettyData ={}\n        if (this.state.data){\n            \n            for (let key in this.state.data){\n                if (Array.isArray(this.state.data[key])){\n                    prettyData[key] = this.state.data[key].join(', ')\n                }else{\n                    prettyData[key] = this.state.data[key]\n                }\n            }\n        }\n        //console.log(this.props, this.state)\n        if (this.state.isModalVisible){\n            return(\n                <>  \n                    <Button onClick = {this.handleIsShowModal}>Show  {this.state.isModalVisible ? 'less...':'more...' }</Button>\n                    {!this.state.data && <Loading/>}\n                    {this.state.data &&\n                        <Modal \n                            title={this.state.data.name || this.state.data.title } \n                            visible={true}  \n                            onCancel={this.handleIsShowModal} \n                            footer={[\n                                <Button key=\"back\" onClick={this.handleIsShowModal}> Close </Button>\n                            ]}\n                        >\n                            <ul className=\"info-modal-ul\" >\n                                {Object.keys(prettyData).map((title,index) => {return (prettyData[title])? <li key = {index}> <b>{title}</b>: {prettyData[title]}</li> : null})}\n                            </ul>\n                        </Modal>\n                        \n                        }\n                </>)\n\n        } else {\n            return <Button onClick = {this.handleIsShowModal}>Show  {this.state.isModalVisible ? 'less...':'more...' }</Button>\n        }\n        \n        \n    }\n}\n    \n\nInfoModal.propTypes ={\n    link : PropTypes.string.isRequired,\n    //handleShowMore : PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {InfoModal} from '../infoModal/infoModal'\n\nexport class InfoTableRow extends React.Component{\n    render()\n    {\n        //console.log(this.props)\n        return(\n            <tr>  \n                \n                <td>{this.props.item.name || this.props.item.title}</td>\n                {this.props.item.gender && this.props.item.gender === \"male\" ? <td className=\"gender-icon\">&#9794;</td> : this.props.item.gender === \"female\" ? <td className=\"gender-icon\">&#9792;</td> : <td></td>}\n                <td>\n                    <InfoModal link = {this.props.item.url}/>\n                </td>\n            </tr>)\n    }\n}\n    \n\nInfoTableRow.propTypes ={\n    item : PropTypes.object.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport './pagination.css'\n\nconst PAGE_SIZE = 10 //fixed by swapi\n\nexport class Pagination extends React.Component{\n    handleLoadPage = (link, index)=>() => {\n        this.setState(prevstate => ({...prevstate, curPage: index+1}))\n        this.props.loadAnyPage(link)\n    }\n\n    render()\n    {\n        let curPageInd = 0;\n        if (this.props.prevPage){\n            curPageInd = +this.props.prevPage.split('?page=')[1]\n        }\n        \n        if (this.props.link.includes('?page')){console.log(\"PROBLEM\")}\n        let links = [this.props.link];\n        for (let i = 11; i < this.props.numberOfItems ; i+=PAGE_SIZE){\n            links.push(this.props.link+'?page='+(Math.floor(i/PAGE_SIZE)+1))\n        }\n        return(\n            <div className=\"table-pagination\">\n                <Button className=\"table-pagination-button\" onClick={this.handleLoadPage(this.props.prevPage)} disabled = {!this.props.prevPage}>prev</Button>\n                {links.map((link, index)=><Button className=\"table-pagination-button\" key = {index} onClick = {this.handleLoadPage(link, index)} disabled = {index===curPageInd}>{index+1}</Button> )}\n                <Button className=\"table-pagination-button\" onClick={this.handleLoadPage(this.props.nextPage)} disabled = {!this.props.nextPage}>next</Button>\n            </div>\n        )\n    }\n}\n    \n\nPagination.propTypes ={\n    link : PropTypes.string.isRequired,\n    numberOfItems: PropTypes.number.isRequired,\n    loadAnyPage:PropTypes.func.isRequired,\n    prevPage: PropTypes.string,\n    nextPage: PropTypes.string,\n    \n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n//import {Loading} from \"../loading/loading\"\nimport {InfoModal} from '../infoModal/infoModal'\n\nimport {getListByLink, getAllItemsByLink} from '../../swapiModule/swapiModule.js'\n\nimport { Select, Table, Button, Modal } from 'antd';\n\nimport './filter.css'\n\nconst { Option } = Select;\n\n\nexport class Filter extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {filterData:null, list: null, filtredList: null, showModal: false, filterValue:null}\n        this.handleChange = this.handleChange.bind(this);\n        this.handleShowMore = this.handleShowMore.bind(this);\n        this.handleHideTable = this.handleHideTable.bind(this)\n    }\n\n    componentDidMount() {\n        getListByLink(this.props.filterLink)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                filterData:data.results,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n        getAllItemsByLink(this.props.link)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                list:data.data,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n\n    handleChange(value) {\n        //console.log(`selected ${value}`);\n        //console.log(this.state.list)\n        if (!value){\n            this.setState(prevstate => ({\n                ...prevstate,\n                filtredList: null,\n                filterValue:null,\n          }))\n        } else {\n        this.setState(prevstate => ({\n            ...prevstate,\n            filtredList: prevstate.list.filter((item) => (item.films.indexOf(value)!==-1)),\n            filterValue: value,\n      }))\n    }\n    }\n    handleShowMore(){\n        this.setState(prevstate => ({showModal:!prevstate.showModal}))\n    }\n    handleHideTable(){\n        this.setState(prevstate => ({\n            ...prevstate,\n            filtredList: null,\n            filterValue:null,\n      }))\n    }\n    componentWillUnmount(){\n        this.setState = (state,callback)=>{\n            return;\n        }\n    }\n    render(){\n        const columns = [\n            {\n              title: '№',\n              dataIndex: 'number',\n              key: 'number',\n            },\n            {\n              title: 'Name',\n              dataIndex: 'title',\n              key: 'title',\n            },\n            {\n              title: 'Action',\n              key: 'action',\n              dataIndex: 'action',\n              render: key => { return(<InfoModal handleShowMore={this.handleShowMore} link = {key}/>)}\n            },\n          ];\n          const data = []\n        if (this.state.filtredList){\n              this.state.filtredList.map((item, index) => {\n                  data.push({\n                    key: index,\n                    number: index+1,\n                    title: item.name || item.title,\n                    action: item.url,\n                  })\n                  return item\n              }  )\n        }\n        //console.log(this.state)\n        return ( \n            <div className = \"filter-wrp\">\n                {/* {(!this.state.filterData || !this.state.list) && <Loading/>} */}\n                {this.state.filterData &&\n                <>\n                    <Select className=\"filter\" id=\"film-select\" defaultValue={null} value = {this.state.filterValue} onChange={this.handleChange} disabled = {!this.state.list}>\n                        <Option className=\"filter-item\" value={null}>--Films--</Option>\n                        {this.state.filterData.map((item, index)=><Option className=\"filter-item\" key = {index} value={item.url}>{item.title || item.name}</Option>)}\n                    </Select>\n                </>\n                }\n                {/* {this.state.filtredList && <Table className =\"filtred-table\" columns={columns} dataSource={data}/>} */}\n                {this.state.filtredList &&\n                    <Modal \n                            title={this.state.filterData.find((item => (item.url === this.state.filterValue))).title} \n                            visible={true}  \n                            onCancel={this.handleHideTable} \n                            footer={[\n                                <Button key=\"back\" onClick={this.handleHideTable}> Close </Button>\n                            ]}\n                        >\n                            <Table className =\"filtred-table\" columns={columns} dataSource={data} showHeader={false}/> \n                    </Modal>\n                }\n            </div>\n        )\n    }\n}\n    \n\nFilter.propTypes ={\n    filterLink : PropTypes.string.isRequired,\n    link : PropTypes.string.isRequired,\n    //handleShowMore : PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {InfoTableRow} from \"../infoTableRow/infoTableRow\"\nimport {Loading} from \"../loading/loading\"\nimport {Pagination} from \"../pagination/pagination\"\nimport {Filter} from \"../filter/filter\"\n\nimport {getListByLink, SWAPI_LINK} from '../../swapiModule/swapiModule.js'\n\nimport './infoTable.css'\n\nexport class InfoTable extends React.Component{\n    \n    constructor(props) {\n        super(props);\n        const path = props.location.pathname.split('/')\n        let link =  SWAPI_LINK + path[path.length -1]\n        this.state = {loadedData: null, nextPage:null, prevPage:null, count: 0, title:path[path.length -1], link: link};\n        this.handleNextPage = this.handleNextPage.bind(this)\n        this.handlePrevPage = this.handlePrevPage.bind(this)\n        this.handleAnyPage = this.handleAnyPage.bind(this)\n    }\n    \n    componentDidMount() {\n        getListByLink(this.state.link)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n                count: data.count\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n    handleAnyPage(link){\n        this.setState(prevstate => ({\n            ...prevstate,\n            loadedData: null,\n        }))\n        getListByLink(link)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\")); \n    }\n    handleNextPage(){\n        this.setState(prevstate => ({\n            ...prevstate,\n            loadedData: null,\n        }))\n        getListByLink(this.state.nextPage)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n    handlePrevPage(){\n        this.setState(prevstate => ({\n            ...prevstate,\n            loadedData: null,\n        }))\n        getListByLink(this.state.prevPage)\n        .then((data) => {\n            this.setState(prevstate => ({\n                ...prevstate,\n                loadedData: data.results,\n                nextPage: data.next,\n                prevPage:data.previous,\n            }))\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n    componentWillUnmount(){\n        this.setState = (state,callback)=>{\n            return;\n        }\n    }\n    render()\n    {\n        //console.log(this.state)\n        return(\n            <> \n            {!this.state.loadedData && <Loading/>} \n            {/* <button onClick={this.handletest}>test</button> */}\n                <h1>{this.state.title}</h1>\n                <div className=\"header-controls-wrp\">\n                    <Link to=\"/main\" className=\"back-to-main starwars-font\">Back to the main list</Link>\n                    {this.state.title!==\"films\" && <Filter filterLink = {SWAPI_LINK+'films'} link = {this.state.link}/>}\n                </div>\n                \n                <table className=\"info-table\">\n                    <tbody>\n                        {this.state.loadedData && this.state.loadedData.map((item, index) => <InfoTableRow key = {index} item = {item}/>)}     \n                    </tbody>\n                    \n                </table>\n                {this.state.loadedData && \n                    <div className=\"page-controls\">\n                        {this.state.count>10 && <Pagination  link = {this.state.link} numberOfItems = {this.state.count} loadAnyPage={this.handleAnyPage} nextPage={this.state.nextPage} prevPage={this.state.prevPage}/>}\n                    </div>\n                } \n   \n            </>)\n    }\n}\n    \n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {Loading} from \"../loading/loading\"\nimport {getListByLink} from '../../swapiModule/swapiModule.js'\nimport { Table} from 'antd';\n\nexport class NavTable extends React.Component{\n    \n    constructor(props) {\n        super(props);\n        this.state = {loadedData: null};\n    }\n    \n    componentDidMount() {\n        \n        getListByLink()\n        .then((data) => {\n            this.setState({\n                loadedData: data\n            })\n        })\n        .catch(()=> console.log(\"something wrong with request\"));\n    }\n      \n    componentWillUnmount(){\n      this.setState = (state,callback)=>{\n          return;\n      }\n  }\n    render()\n    {\n        const columns = [\n            {\n              title: '№',\n              dataIndex: 'number',\n              key: 'number',\n            },\n            {\n              title: 'Title',\n              dataIndex: 'title',\n              key: 'title',\n            },\n            {\n              title: 'Link',\n              dataIndex: 'link',\n              key: 'link',\n            },\n            {\n              title: 'Action',\n              key: 'action',\n              dataIndex: 'action',\n              render: key => (<Link to = {'/infotables/'+key}>Open page</Link>)\n            },\n          ];\n          const data = []\n          for (let key in this.state.loadedData){\n              data.push({\n                key: data.length,\n                number: data.length+1,\n                title: key,\n                link: this.state.loadedData[key],\n                action: key,\n              })\n          }  \n          \n        return(\n            <>  \n                {!this.state.loadedData && <Loading/>} \n                <h1>{this.props.title}</h1>\n                <Table columns={columns} dataSource={data} pagination={false}/>\n            </>)\n    }\n}\n    \n\nNavTable.propTypes ={\n    title : PropTypes.string.isRequired,\n}\n","export default __webpack_public_path__ + \"static/media/r2d2.4002b4bf.svg\";","import React from 'react';\nimport './notFound.css'\nimport r2d2 from '../../imgs/r2d2.svg'\n\nexport class NotFound extends React.Component{\n\n    render()\n    {\n        return(\n            <>  \n                <div className=\"not-found\">\n                    <h1 className=\"not-found-header\">This is not the page you're looking for</h1>\n                    <img src={r2d2} alt=\"\" className=\"r2d2\"/>\n                </div>\n                \n            </>)\n    }\n}\n    \n\n\n","import React from 'react';\nimport './footer.css'\n\nexport class Footer extends React.Component{\n\n    render()\n    {\n        return(\n            <>  \n                <footer className=\"footer\">\n                    <p>One more interface for <a target=\"_blank\" rel=\"noreferrer\" href=\"https://swapi.dev/\">SWAPI</a></p>\n                </footer>\n                \n            </>)\n    }\n}\n   ","import './App.css';\nimport React from 'react';\nimport {BrowserRouter, HashRouter, Switch, Route, Redirect} from 'react-router-dom';\n\nimport { InfoTable } from './components/infoTable/infoTable';\nimport {NavTable} from './components/navTable/navTable'\nimport {NotFound} from './components/notFound/notFound'\nimport {Footer} from './components/footer/footer'\n\nfunction App() {\n  return(\n    <div className=\"main-wrp\">\n    <main className=\"main\">\n      <HashRouter>\n        <Switch>\n          <Route path = '/' exact><Redirect to=\"/main\" /></Route>\n          <Route path = '/main' >\n            <NavTable title = \"Main List\"/>\n          </Route>\n          <Route path = '/infotables/:theme' exact component={InfoTable}></Route>\n          <Route path = '/' component={NotFound}/> \n        </Switch>\n      </HashRouter>\n    </main>\n    <Footer/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n//import {getListByLink, digListByLink} from './swapiModule/swapiModule.js'\n\n\n// getListByLink()//'https://swapi.dev/api/films')\n// .then(data => {console.log(\"then \", data)})\n// .catch(error => {console.log(\"catch \", error)});\n\n// digListByLink('https://swapi.dev/api/people')\n// .then(data => {console.log(\"then \", data)})\n// .catch(error => {console.log(\"catch \", error)});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}